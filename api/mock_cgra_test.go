// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sarchlab/zeonica/cgra (interfaces: Device)

package api

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cgra "github.com/sarchlab/zeonica/cgra"
	sim "gitlab.com/akita/akita/v2/sim"
)

// MockDevice is a mock of Device interface.
type MockDevice struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceMockRecorder
}

// MockDeviceMockRecorder is the mock recorder for MockDevice.
type MockDeviceMockRecorder struct {
	mock *MockDevice
}

// NewMockDevice creates a new mock instance.
func NewMockDevice(ctrl *gomock.Controller) *MockDevice {
	mock := &MockDevice{ctrl: ctrl}
	mock.recorder = &MockDeviceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDevice) EXPECT() *MockDeviceMockRecorder {
	return m.recorder
}

// GetSidePorts mocks base method.
func (m *MockDevice) GetSidePorts(arg0 cgra.Side, arg1 [2]int) []sim.Port {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSidePorts", arg0, arg1)
	ret0, _ := ret[0].([]sim.Port)
	return ret0
}

// GetSidePorts indicates an expected call of GetSidePorts.
func (mr *MockDeviceMockRecorder) GetSidePorts(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSidePorts", reflect.TypeOf((*MockDevice)(nil).GetSidePorts), arg0, arg1)
}

// GetSize mocks base method.
func (m *MockDevice) GetSize() (int, int) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSize")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(int)
	return ret0, ret1
}

// GetSize indicates an expected call of GetSize.
func (mr *MockDeviceMockRecorder) GetSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSize", reflect.TypeOf((*MockDevice)(nil).GetSize))
}

// GetTile mocks base method.
func (m *MockDevice) GetTile(arg0, arg1 int) *cgra.Tile {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTile", arg0, arg1)
	ret0, _ := ret[0].(*cgra.Tile)
	return ret0
}

// GetTile indicates an expected call of GetTile.
func (mr *MockDeviceMockRecorder) GetTile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTile", reflect.TypeOf((*MockDevice)(nil).GetTile), arg0, arg1)
}
